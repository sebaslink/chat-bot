#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script para probar la funci√≥n de descarga de plantilla del sistema
"""

import sys
import os
sys.path.append('codigo')

def test_descarga_plantilla():
    """Probar la funci√≥n de descarga de plantilla"""
    try:
        # Importar la funci√≥n del sistema
        from codchat import descargar_plantilla_excel
        
        print("üîç Probando funci√≥n de descarga de plantilla...")
        
        # Simular request (no necesitamos Flask para esta prueba)
        class MockRequest:
            pass
        
        # Crear datos de ejemplo (simulando la funci√≥n real)
        data = {
            'nombre': [
                'Juan', 'Mar√≠a', 'Carlos', 'Ana', 'Luis',
                'Sofia', 'Diego', 'Valentina', 'Miguel', 'Camila'
            ],
            'apellido': [
                'P√©rez', 'Gonz√°lez', 'L√≥pez', 'Mart√≠nez', 'Rodr√≠guez',
                'Fern√°ndez', 'Garc√≠a', 'Hern√°ndez', 'Jim√©nez', 'Morales'
            ],
            'numero': [
                '51987654321', '51912345678', '51911223344', '51999887766', '51955443322',
                '51977665544', '51933445566', '51988990011', '51922334455', '51966778899'
            ],
            'carrera': [
                'Ingenier√≠a de Sistemas', 'Medicina', 'Derecho', 'Psicolog√≠a', 'Administraci√≥n',
                'Arquitectura', 'Contabilidad', 'Enfermer√≠a', 'Marketing', 'Educaci√≥n'
            ],
            'grupo': [
                'Ingenier√≠a', 'Medicina', 'Derecho', 'Psicolog√≠a', 'Administraci√≥n',
                'Ingenier√≠a', 'Administraci√≥n', 'Medicina', 'Administraci√≥n', 'Psicolog√≠a'
            ]
        }
        
        # Crear DataFrame
        import pandas as pd
        df = pd.DataFrame(data)
        
        # Crear archivo en memoria
        import io
        output = io.BytesIO()
        with pd.ExcelWriter(output, engine='openpyxl') as writer:
            # Hoja principal con datos
            df.to_excel(writer, sheet_name='Contactos', index=False)
            
            # Hoja de instrucciones
            instrucciones = pd.DataFrame({
                'Instrucciones': [
                    'INSTRUCCIONES PARA IMPORTAR CONTACTOS',
                    '',
                    '1. Este archivo contiene contactos de ejemplo con grupos predefinidos.',
                    '',
                    '2. Grupos disponibles:',
                    '   - Ingenier√≠a: Estudiantes y profesionales de ingenier√≠a',
                    '   - Medicina: Estudiantes y profesionales de medicina',
                    '   - Derecho: Estudiantes y profesionales de derecho',
                    '   - Administraci√≥n: Estudiantes y profesionales de administraci√≥n',
                    '   - Psicolog√≠a: Estudiantes y profesionales de psicolog√≠a',
                    '   - General: Grupo por defecto',
                    '',
                    '3. Columnas requeridas:',
                    '   - nombre: Nombre del contacto (obligatorio)',
                    '   - apellido: Apellido del contacto (opcional)',
                    '   - numero: N√∫mero de tel√©fono (obligatorio, solo n√∫meros)',
                    '   - carrera: Carrera o profesi√≥n (opcional)',
                    '   - grupo: Grupo al que pertenece (opcional, se mapea autom√°ticamente)',
                    '',
                    '4. Para importar:',
                    '   - Ve a la pesta√±a "Importar" en la aplicaci√≥n',
                    '   - Selecciona este archivo Excel',
                    '   - Los grupos se asignar√°n autom√°ticamente',
                    '',
                    '5. Notas:',
                    '   - Los n√∫meros deben incluir c√≥digo de pa√≠s (ej: 51987654321)',
                    '   - Los grupos deben coincidir exactamente con los nombres predefinidos',
                    '   - Se pueden agregar m√°s contactos siguiendo el mismo formato'
                ]
            })
            instrucciones.to_excel(writer, sheet_name='Instrucciones', index=False, header=False)
        
        output.seek(0)
        
        # Guardar archivo para verificaci√≥n
        with open('plantilla_sistema.xlsx', 'wb') as f:
            f.write(output.getvalue())
        
        print("‚úÖ Plantilla del sistema creada exitosamente")
        print(f"üìä Columnas incluidas: {list(df.columns)}")
        print(f"üìà N√∫mero de contactos: {len(df)}")
        print(f"üè∑Ô∏è Grupos incluidos: {df['grupo'].unique()}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False

def verificar_plantilla_sistema():
    """Verificar la plantilla generada por el sistema"""
    try:
        import pandas as pd
        
        # Leer archivo generado
        df = pd.read_excel('plantilla_sistema.xlsx', sheet_name='Contactos')
        
        print("\nüîç Verificando plantilla del sistema...")
        print(f"üìä Columnas: {list(df.columns)}")
        
        # Verificar que tiene la columna grupo
        if 'grupo' in df.columns:
            print("‚úÖ Columna 'grupo' presente")
            print(f"üè∑Ô∏è Grupos: {df['grupo'].unique()}")
        else:
            print("‚ùå Columna 'grupo' NO presente")
            return False
        
        # Verificar hoja de instrucciones
        try:
            instrucciones = pd.read_excel('plantilla_sistema.xlsx', sheet_name='Instrucciones')
            print("‚úÖ Hoja de instrucciones presente")
        except:
            print("‚ö†Ô∏è Hoja de instrucciones no encontrada")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error verificando plantilla: {e}")
        return False

def main():
    """Funci√≥n principal"""
    print("üöÄ Probando descarga de plantilla del sistema...")
    print("=" * 60)
    
    if test_descarga_plantilla():
        if verificar_plantilla_sistema():
            print("\n‚úÖ Verificaci√≥n completada exitosamente")
            print("üéØ La plantilla del sistema incluye correctamente la columna de grupos")
            print("üìÅ Archivo guardado como: plantilla_sistema.xlsx")
        else:
            print("\n‚ùå La verificaci√≥n fall√≥")
    else:
        print("\n‚ùå Error creando la plantilla")

if __name__ == '__main__':
    main()
